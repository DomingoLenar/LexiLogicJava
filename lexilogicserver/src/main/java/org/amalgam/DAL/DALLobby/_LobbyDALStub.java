package org.amalgam.DAL.DALLobby;


import org.amalgam.lexilogicserver.model.utilities.corbautils.LobbyImpl;

/**
* org/amalgam/DAL/DALLobby/_LobbyDALStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DataAccessLayer.idl
* Sunday, May 5, 2024 5:01:36 PM SGT
*/

public class _LobbyDALStub extends org.omg.CORBA.portable.ObjectImpl implements LobbyDAL
{

  public void insertNewLobby (int lobbyId, String createdBy, String winner) throws org.amalgam.DAL.SQLExceptions.SQLCreateError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertNewLobby", true);
                $out.write_long (lobbyId);
                $out.write_string (createdBy);
                $out.write_string (winner);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/DAL/SQLExceptions/SQLCreateError:1.0"))
                    throw org.amalgam.DAL.SQLExceptions.SQLCreateErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                insertNewLobby (lobbyId, createdBy, winner        );
            } finally {
                _releaseReply ($in);
            }
  } // insertNewLobby

  public LobbyImpl getLobbyByID (int lobbyId) throws org.amalgam.DAL.SQLExceptions.SQLRetrieveError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLobbyByID", true);
                $out.write_long (lobbyId);
                $in = _invoke ($out);
                org.amalgam.Utils.Objects.Lobby $result = org.amalgam.DAL.DALLobby.LobbyDALPackage.LobbyHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/DAL/SQLExceptions/SQLRetrieveError:1.0"))
                    throw org.amalgam.DAL.SQLExceptions.SQLRetrieveErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLobbyByID (lobbyId        );
            } finally {
                _releaseReply ($in);
            }
  } // getLobbyByID

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/DAL/DALLobby/LobbyDAL:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "org.amalgam.DAL.DALLobby._LobbyDALStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LobbyDALStub
