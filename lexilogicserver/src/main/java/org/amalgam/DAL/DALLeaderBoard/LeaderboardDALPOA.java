package org.amalgam.DAL.DALLeaderBoard;


/**
* org/amalgam/DAL/DALLeaderBoard/LeaderboardDALPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DataAccessLayer.idl
* Sunday, May 5, 2024 5:01:36 PM SGT
*/

public abstract class LeaderboardDALPOA extends org.omg.PortableServer.Servant
 implements LeaderboardDALOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("insertNewLeaderboard", new Integer (0));
    _methods.put ("getLeaderboardByID", new Integer (1));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // org/amalgam/DAL/DALLeaderBoard/LeaderboardDAL/insertNewLeaderboard
       {
         try {
           int userID = in.read_long ();
           int totalPoints = in.read_long ();
           this.insertNewLeaderboard (userID, totalPoints);
           out = $rh.createReply();
         } catch (org.amalgam.DAL.SQLExceptions.SQLCreateError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.DAL.SQLExceptions.SQLCreateErrorHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // org/amalgam/DAL/DALLeaderBoard/LeaderboardDAL/getLeaderboardByID
       {
         try {
           int leaderboardID = in.read_long ();
           org.amalgam.Utils.Objects.Leaderboard $result = null;
           $result = this.getLeaderboardByID (leaderboardID);
           out = $rh.createReply();
           org.amalgam.Utils.Objects.LeaderboardHelper.write (out, $result);
         } catch (org.amalgam.DAL.SQLExceptions.SQLRetrieveError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.DAL.SQLExceptions.SQLRetrieveErrorHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/DAL/DALLeaderBoard/LeaderboardDAL:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LeaderboardDAL _this() 
  {
    return LeaderboardDALHelper.narrow(
    super._this_object());
  }

  public LeaderboardDAL _this(org.omg.CORBA.ORB orb) 
  {
    return LeaderboardDALHelper.narrow(
    super._this_object(orb));
  }


} // class LeaderboardDALPOA
