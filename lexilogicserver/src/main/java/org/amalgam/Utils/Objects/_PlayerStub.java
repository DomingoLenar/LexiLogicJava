package org.amalgam.Utils.Objects;


/**
* org/amalgam/Utils/Objects/_PlayerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ProgramUtilities.idl
* Wednesday, May 8, 2024 1:24:07 AM SGT
*/

public class _PlayerStub extends org.omg.CORBA.portable.ObjectImpl implements Player
{

  public int id ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_id", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return id (        );
            } finally {
                _releaseReply ($in);
            }
  } // id

  public void id (int newId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_id", true);
                $out.write_long (newId);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                id (newId        );
            } finally {
                _releaseReply ($in);
            }
  } // id

  public String name ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_name", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return name (        );
            } finally {
                _releaseReply ($in);
            }
  } // name

  public void name (String newName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_name", true);
                $out.write_string (newName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                name (newName        );
            } finally {
                _releaseReply ($in);
            }
  } // name

  public String password ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_password", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return password (        );
            } finally {
                _releaseReply ($in);
            }
  } // password

  public void password (String newPassword)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_password", true);
                $out.write_string (newPassword);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                password (newPassword        );
            } finally {
                _releaseReply ($in);
            }
  } // password

  public String lastLogin ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_lastLogin", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lastLogin (        );
            } finally {
                _releaseReply ($in);
            }
  } // lastLogin

  public void lastLogin (String newLastLogin)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_lastLogin", true);
                $out.write_string (newLastLogin);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                lastLogin (newLastLogin        );
            } finally {
                _releaseReply ($in);
            }
  } // lastLogin

  public void addPlayer (Player player) throws org.amalgam.Utils.Exceptions.DuplicatePlayerIDException, org.amalgam.Utils.Exceptions.InvalidPlayerDataException, org.amalgam.Utils.Exceptions.SQLError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addPlayer", true);
                PlayerHelper.write ($out, player);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/DuplicatePlayerIDException:1.0"))
                    throw org.amalgam.Utils.Exceptions.DuplicatePlayerIDExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/InvalidPlayerDataException:1.0"))
                    throw org.amalgam.Utils.Exceptions.InvalidPlayerDataExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/SQLError:1.0"))
                    throw org.amalgam.Utils.Exceptions.SQLErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addPlayer (player        );
            } finally {
                _releaseReply ($in);
            }
  } // addPlayer

  public void updateName (String newName) throws org.amalgam.Utils.Exceptions.InvalidNameException, org.amalgam.Utils.Exceptions.SQLError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateName", true);
                $out.write_string (newName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/InvalidNameException:1.0"))
                    throw org.amalgam.Utils.Exceptions.InvalidNameExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/SQLError:1.0"))
                    throw org.amalgam.Utils.Exceptions.SQLErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateName (newName        );
            } finally {
                _releaseReply ($in);
            }
  } // updateName

  public void updatePassword (String newPassword) throws org.amalgam.Utils.Exceptions.InvalidPasswordException, org.amalgam.Utils.Exceptions.SQLError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updatePassword", true);
                $out.write_string (newPassword);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/InvalidPasswordException:1.0"))
                    throw org.amalgam.Utils.Exceptions.InvalidPasswordExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/SQLError:1.0"))
                    throw org.amalgam.Utils.Exceptions.SQLErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updatePassword (newPassword        );
            } finally {
                _releaseReply ($in);
            }
  } // updatePassword

  public void updateLastLogin (String newTime) throws org.amalgam.Utils.Exceptions.UpdateLastLoginException, org.amalgam.Utils.Exceptions.SQLError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateLastLogin", true);
                $out.write_string (newTime);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/UpdateLastLoginException:1.0"))
                    throw org.amalgam.Utils.Exceptions.UpdateLastLoginExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/SQLError:1.0"))
                    throw org.amalgam.Utils.Exceptions.SQLErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateLastLogin (newTime        );
            } finally {
                _releaseReply ($in);
            }
  } // updateLastLogin

  public void deletePlayer (int id) throws org.amalgam.Utils.Exceptions.PlayerDoesNotExistException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deletePlayer", true);
                $out.write_long (id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/PlayerDoesNotExistException:1.0"))
                    throw org.amalgam.Utils.Exceptions.PlayerDoesNotExistExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                deletePlayer (id        );
            } finally {
                _releaseReply ($in);
            }
  } // deletePlayer

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/Utils/Objects/Player:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "org.amalgam.Utils.Objects._PlayerStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _PlayerStub
