package org.amalgam.Utils.Objects;


/**
* org/amalgam/Utils/Objects/PlayerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ProgramObjects.idl
* Friday, May 3, 2024 11:32:16 PM SGT
*/

public abstract class PlayerPOA extends org.omg.PortableServer.Servant
 implements PlayerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_id", new Integer (0));
    _methods.put ("_set_id", new Integer (1));
    _methods.put ("_get_name", new Integer (2));
    _methods.put ("_set_name", new Integer (3));
    _methods.put ("_get_password", new Integer (4));
    _methods.put ("_set_password", new Integer (5));
    _methods.put ("_get_lastLogin", new Integer (6));
    _methods.put ("_set_lastLogin", new Integer (7));
    _methods.put ("addPlayer", new Integer (8));
    _methods.put ("updateName", new Integer (9));
    _methods.put ("updatePassword", new Integer (10));
    _methods.put ("updateLastLogin", new Integer (11));
    _methods.put ("deletePlayer", new Integer (12));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // org/amalgam/Utils/Objects/Player/_get_id
       {
         int $result = (int)0;
         $result = this.id ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // org/amalgam/Utils/Objects/Player/_set_id
       {
         int newId = in.read_long ();
         this.id (newId);
         out = $rh.createReply();
         break;
       }

       case 2:  // org/amalgam/Utils/Objects/Player/_get_name
       {
         String $result = null;
         $result = this.name ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // org/amalgam/Utils/Objects/Player/_set_name
       {
         String newName = in.read_string ();
         this.name (newName);
         out = $rh.createReply();
         break;
       }

       case 4:  // org/amalgam/Utils/Objects/Player/_get_password
       {
         String $result = null;
         $result = this.password ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // org/amalgam/Utils/Objects/Player/_set_password
       {
         String newPassword = in.read_string ();
         this.password (newPassword);
         out = $rh.createReply();
         break;
       }

       case 6:  // org/amalgam/Utils/Objects/Player/_get_lastLogin
       {
         String $result = null;
         $result = this.lastLogin ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // org/amalgam/Utils/Objects/Player/_set_lastLogin
       {
         String newLastLogin = in.read_string ();
         this.lastLogin (newLastLogin);
         out = $rh.createReply();
         break;
       }

       case 8:  // org/amalgam/Utils/Objects/Player/addPlayer
       {
         try {
           Player player = PlayerHelper.read (in);
           this.addPlayer (player);
           out = $rh.createReply();
         } catch (org.amalgam.Utils.ObjectExceptions.DuplicatePlayerIDException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.DuplicatePlayerIDExceptionHelper.write (out, $ex);
         } catch (org.amalgam.Utils.ObjectExceptions.InvalidPlayerDataException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.InvalidPlayerDataExceptionHelper.write (out, $ex);
         } catch (org.amalgam.Utils.ObjectExceptions.SQLError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.SQLErrorHelper.write (out, $ex);
         }
         break;
       }

       case 9:  // org/amalgam/Utils/Objects/Player/updateName
       {
         try {
           String newName = in.read_string ();
           this.updateName (newName);
           out = $rh.createReply();
         } catch (org.amalgam.Utils.ObjectExceptions.InvalidNameException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.InvalidNameExceptionHelper.write (out, $ex);
         } catch (org.amalgam.Utils.ObjectExceptions.SQLError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.SQLErrorHelper.write (out, $ex);
         }
         break;
       }

       case 10:  // org/amalgam/Utils/Objects/Player/updatePassword
       {
         try {
           String newPassword = in.read_string ();
           this.updatePassword (newPassword);
           out = $rh.createReply();
         } catch (org.amalgam.Utils.ObjectExceptions.InvalidPasswordException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.InvalidPasswordExceptionHelper.write (out, $ex);
         } catch (org.amalgam.Utils.ObjectExceptions.SQLError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.SQLErrorHelper.write (out, $ex);
         }
         break;
       }

       case 11:  // org/amalgam/Utils/Objects/Player/updateLastLogin
       {
         try {
           String newTime = in.read_string ();
           this.updateLastLogin (newTime);
           out = $rh.createReply();
         } catch (org.amalgam.Utils.ObjectExceptions.UpdateLastLoginException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.UpdateLastLoginExceptionHelper.write (out, $ex);
         } catch (org.amalgam.Utils.ObjectExceptions.SQLError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.SQLErrorHelper.write (out, $ex);
         }
         break;
       }

       case 12:  // org/amalgam/Utils/Objects/Player/deletePlayer
       {
         try {
           int id = in.read_long ();
           this.deletePlayer (id);
           out = $rh.createReply();
         } catch (org.amalgam.Utils.ObjectExceptions.PlayerDoesNotExistException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.ObjectExceptions.PlayerDoesNotExistExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/Utils/Objects/Player:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Player _this() 
  {
    return PlayerHelper.narrow(
    super._this_object());
  }

  public Player _this(org.omg.CORBA.ORB orb) 
  {
    return PlayerHelper.narrow(
    super._this_object(orb));
  }


} // class PlayerPOA
