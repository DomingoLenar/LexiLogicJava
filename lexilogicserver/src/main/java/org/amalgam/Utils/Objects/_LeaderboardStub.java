package org.amalgam.Utils.Objects;


/**
* org/amalgam/Utils/Objects/_LeaderboardStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ProgramObjects.idl
* Friday, May 3, 2024 11:32:16 PM SGT
*/

public class _LeaderboardStub extends org.omg.CORBA.portable.ObjectImpl implements Leaderboard
{

  public int leaderboardID ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_leaderboardID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return leaderboardID (        );
            } finally {
                _releaseReply ($in);
            }
  } // leaderboardID

  public void leaderboardID (int newLeaderboardID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_leaderboardID", true);
                $out.write_long (newLeaderboardID);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                leaderboardID (newLeaderboardID        );
            } finally {
                _releaseReply ($in);
            }
  } // leaderboardID

  public int playerID ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_playerID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return playerID (        );
            } finally {
                _releaseReply ($in);
            }
  } // playerID

  public void playerID (int newPlayerID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_playerID", true);
                $out.write_long (newPlayerID);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                playerID (newPlayerID        );
            } finally {
                _releaseReply ($in);
            }
  } // playerID

  public int totalPoints ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_totalPoints", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return totalPoints (        );
            } finally {
                _releaseReply ($in);
            }
  } // totalPoints

  public void totalPoints (int newTotalPoints)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_totalPoints", true);
                $out.write_long (newTotalPoints);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                totalPoints (newTotalPoints        );
            } finally {
                _releaseReply ($in);
            }
  } // totalPoints

  public void updateTotalPoints (int newPoints) throws org.amalgam.Utils.ObjectExceptions.InvalidPointsException, org.amalgam.Utils.ObjectExceptions.SQLError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateTotalPoints", true);
                $out.write_long (newPoints);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/ObjectExceptions/InvalidPointsException:1.0"))
                    throw org.amalgam.Utils.ObjectExceptions.InvalidPointsExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/ObjectExceptions/SQLError:1.0"))
                    throw org.amalgam.Utils.ObjectExceptions.SQLErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                updateTotalPoints (newPoints        );
            } finally {
                _releaseReply ($in);
            }
  } // updateTotalPoints

  public int getPlayerID () throws org.amalgam.Utils.ObjectExceptions.PlayerDoesNotExistException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPlayerID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/ObjectExceptions/PlayerDoesNotExistException:1.0"))
                    throw org.amalgam.Utils.ObjectExceptions.PlayerDoesNotExistExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPlayerID (        );
            } finally {
                _releaseReply ($in);
            }
  } // getPlayerID

  public int getLeaderboardID () throws org.amalgam.Utils.ObjectExceptions.LeaderboardIDRetrievalException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLeaderboardID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/ObjectExceptions/LeaderboardIDRetrievalException:1.0"))
                    throw org.amalgam.Utils.ObjectExceptions.LeaderboardIDRetrievalExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLeaderboardID (        );
            } finally {
                _releaseReply ($in);
            }
  } // getLeaderboardID

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/Utils/Objects/Leaderboard:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "org.amalgam.Utils.Objects._LeaderboardStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LeaderboardStub
