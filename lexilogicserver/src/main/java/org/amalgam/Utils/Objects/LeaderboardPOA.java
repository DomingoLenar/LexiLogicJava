package org.amalgam.Utils.Objects;


/**
* org/amalgam/Utils/Objects/LeaderboardPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ProgramUtilities.idl
* Wednesday, May 8, 2024 1:24:07 AM SGT
*/

public abstract class LeaderboardPOA extends org.omg.PortableServer.Servant
 implements LeaderboardOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_leaderboardID", new Integer (0));
    _methods.put ("_set_leaderboardID", new Integer (1));
    _methods.put ("_get_playerID", new Integer (2));
    _methods.put ("_set_playerID", new Integer (3));
    _methods.put ("_get_totalPoints", new Integer (4));
    _methods.put ("_set_totalPoints", new Integer (5));
    _methods.put ("updateTotalPoints", new Integer (6));
    _methods.put ("getPlayerID", new Integer (7));
    _methods.put ("getLeaderboardID", new Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // org/amalgam/Utils/Objects/Leaderboard/_get_leaderboardID
       {
         int $result = (int)0;
         $result = this.leaderboardID ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // org/amalgam/Utils/Objects/Leaderboard/_set_leaderboardID
       {
         int newLeaderboardID = in.read_long ();
         this.leaderboardID (newLeaderboardID);
         out = $rh.createReply();
         break;
       }

       case 2:  // org/amalgam/Utils/Objects/Leaderboard/_get_playerID
       {
         int $result = (int)0;
         $result = this.playerID ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // org/amalgam/Utils/Objects/Leaderboard/_set_playerID
       {
         int newPlayerID = in.read_long ();
         this.playerID (newPlayerID);
         out = $rh.createReply();
         break;
       }

       case 4:  // org/amalgam/Utils/Objects/Leaderboard/_get_totalPoints
       {
         int $result = (int)0;
         $result = this.totalPoints ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 5:  // org/amalgam/Utils/Objects/Leaderboard/_set_totalPoints
       {
         int newTotalPoints = in.read_long ();
         this.totalPoints (newTotalPoints);
         out = $rh.createReply();
         break;
       }

       case 6:  // org/amalgam/Utils/Objects/Leaderboard/updateTotalPoints
       {
         try {
           int newPoints = in.read_long ();
           this.updateTotalPoints (newPoints);
           out = $rh.createReply();
         } catch (org.amalgam.Utils.Exceptions.InvalidPointsException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.Exceptions.InvalidPointsExceptionHelper.write (out, $ex);
         } catch (org.amalgam.Utils.Exceptions.SQLError $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.Exceptions.SQLErrorHelper.write (out, $ex);
         }
         break;
       }

       case 7:  // org/amalgam/Utils/Objects/Leaderboard/getPlayerID
       {
         try {
           int $result = (int)0;
           $result = this.getPlayerID ();
           out = $rh.createReply();
           out.write_long ($result);
         } catch (org.amalgam.Utils.Exceptions.PlayerDoesNotExistException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.Exceptions.PlayerDoesNotExistExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 8:  // org/amalgam/Utils/Objects/Leaderboard/getLeaderboardID
       {
         try {
           int $result = (int)0;
           $result = this.getLeaderboardID ();
           out = $rh.createReply();
           out.write_long ($result);
         } catch (org.amalgam.Utils.Exceptions.LeaderboardIDRetrievalException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Utils.Exceptions.LeaderboardIDRetrievalExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/Utils/Objects/Leaderboard:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Leaderboard _this() 
  {
    return LeaderboardHelper.narrow(
    super._this_object());
  }

  public Leaderboard _this(org.omg.CORBA.ORB orb) 
  {
    return LeaderboardHelper.narrow(
    super._this_object(orb));
  }


} // class LeaderboardPOA
