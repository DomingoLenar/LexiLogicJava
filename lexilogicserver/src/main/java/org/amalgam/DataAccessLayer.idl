module DAL {

    module DALUtil {

        interface DatabaseUtil{
        string getConnection() raises (SQLException);
        void closeConnection() raises (SQLException);

        };
    };

    module DALGameDetail {

        interface gameObject{
             struct GameDetail {
                    attribute long playerID;
                    attribute long lobbyID;
                    attribute long totalPoints;
                };
        };

        interface GameDetailsDAL{
            void insertNewGameDetail (in long playerID,in long lobbyID,in long totalPoints) raises (SQLException);
            GameDetail getGameDetailByID (long lobbyID) raises (SQLException);
        };

    };

    module DALLeaderBoard {
        interface gameObjects{
          struct Leaderboard {
                attribute long leaderboardID;
                attribute long userID;
                attribute long totalPoints;
                };
        };


        interface LeaderboardDAL {
            void insertNewLeaderboard (in long userID, in long totalPoints) raises (SQLException);
            Leaderboard getLeaderboardByID(in long leaderboardID) raises (SQLException);
        };

    };

    module DALLobby {

        interface gameObjects {
          struct Lobby {
                attribute string lobbyId;
                attribute string createdBy;
                attribute string winner;
            };
        };

        interface LobbyDAL {
            void insertNewLobby (in long lobbyId, in string createdBy, in string winner ) raises (SQLException);
            Lobby getLobbyByID (in long lobbyId) raises (SQLException);
        };


    };

    module DALPlayer {

        interface playerObject {
            struct Player {
                    attribute long id;
                    attribute string name;
                    attribute string password;
                    attribute string lastLogin;
                };
        };

        interface PlayerDAL{
            void insertNewPlayer (in string username, in string password, in string lastLogin) raises (SQLException);
            Player getPlayerByID (in long playerID) raises (SQLException);
            void updatePassword (in long playerID, in string newPassword) raises (SQLException);
            void updateUsername (in long playerID, in string newUsername) raises (SQLException);
            void deletePlayer (in long playerID) raises (SQLException);
        };

    };

};