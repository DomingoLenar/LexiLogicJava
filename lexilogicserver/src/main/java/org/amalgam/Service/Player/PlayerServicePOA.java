package org.amalgam.Service.Player;


/**
* org/amalgam/Service/Player/PlayerServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from PlayerService.idl
* Saturday, April 27, 2024 5:34:27 PM SGT
*/

public abstract class PlayerServicePOA extends org.omg.PortableServer.Servant
 implements org.amalgam.Service.Player.PlayerServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("login", new java.lang.Integer (0));
    _methods.put ("logout", new java.lang.Integer (1));
    _methods.put ("changeUsername", new java.lang.Integer (2));
    _methods.put ("changePassword", new java.lang.Integer (3));
    _methods.put ("deleteAccount", new java.lang.Integer (4));
    _methods.put ("submitWord", new java.lang.Integer (5));
    _methods.put ("startGame", new java.lang.Integer (6));
    _methods.put ("getGameResult", new java.lang.Integer (7));
    _methods.put ("getGameHistory", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // org/amalgam/Service/Player/PlayerService/login
       {
         try {
           org.amalgam.Service.Player.PlayerCallback player_callback = org.amalgam.Service.Player.PlayerCallbackHelper.read (in);
           this.login (player_callback);
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.AlreadyLoggedIn $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.AlreadyLoggedInHelper.write (out, $ex);
         } catch (org.amalgam.Service.PlayerExceptions.InvalidCredentials $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.InvalidCredentialsHelper.write (out, $ex);
         } catch (org.amalgam.Service.PlayerExceptions.UserExistenceException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.UserExistenceExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // org/amalgam/Service/Player/PlayerService/logout
       {
         try {
           this.logout ();
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.NotLoggedIn $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.NotLoggedInHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // org/amalgam/Service/Player/PlayerService/changeUsername
       {
         try {
           String username = in.read_string ();
           String newUsername = in.read_string ();
           this.changeUsername (username, newUsername);
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.ChangeUsernameFailed $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.ChangeUsernameFailedHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // org/amalgam/Service/Player/PlayerService/changePassword
       {
         try {
           String username = in.read_string ();
           String newPassword = in.read_string ();
           this.changePassword (username, newPassword);
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.ChangePasswordFailed $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.ChangePasswordFailedHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // org/amalgam/Service/Player/PlayerService/deleteAccount
       {
         try {
           String username = in.read_string ();
           this.deleteAccount (username);
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.DeleteAccountFailed $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.DeleteAccountFailedHelper.write (out, $ex);
         }
         break;
       }

       case 5:  // org/amalgam/Service/Player/PlayerService/submitWord
       {
         try {
           String word = in.read_string ();
           String username = in.read_string ();
           this.submitWord (word, username);
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.SubmitWordFailed $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.SubmitWordFailedHelper.write (out, $ex);
         }
         break;
       }

       case 6:  // org/amalgam/Service/Player/PlayerService/startGame
       {
         try {
           String username = in.read_string ();
           this.startGame (username);
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.StartGameFailed $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.StartGameFailedHelper.write (out, $ex);
         } catch (org.amalgam.Service.PlayerExceptions.InGameException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.InGameExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 7:  // org/amalgam/Service/Player/PlayerService/getGameResult
       {
         try {
           this.getGameResult ();
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.GameResultUnavailable $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.GameResultUnavailableHelper.write (out, $ex);
         } catch (org.amalgam.Service.PlayerExceptions.InGameException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.InGameExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 8:  // org/amalgam/Service/Player/PlayerService/getGameHistory
       {
         try {
           this.getGameHistory ();
           out = $rh.createReply();
         } catch (org.amalgam.Service.PlayerExceptions.GameHistoryUnavailable $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.GameHistoryUnavailableHelper.write (out, $ex);
         } catch (org.amalgam.Service.PlayerExceptions.InGameException $ex) {
           out = $rh.createExceptionReply ();
           org.amalgam.Service.PlayerExceptions.InGameExceptionHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/Service/Player/PlayerService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public PlayerService _this() 
  {
    return PlayerServiceHelper.narrow(
    super._this_object());
  }

  public PlayerService _this(org.omg.CORBA.ORB orb) 
  {
    return PlayerServiceHelper.narrow(
    super._this_object(orb));
  }


} // class PlayerServicePOA
