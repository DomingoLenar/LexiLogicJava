#include "ProgramUtilities.idl"
module org {
    module amalgam {
        module Service {
            module PlayerServiceModule {

                interface PlayerService {
                    typedef org::amalgam::Utils::Objects::Player Player;
                    typedef org::amalgam::Utils::UIControllers::PlayerCallback PlayerCallback;
                    typedef org::amalgam::Utils::Objects::Lobby Lobby;

                    void login(in PlayerCallback player_callback)
                        raises (org::amalgam::Utils::Exceptions::AlreadyLoggedInException, org::amalgam::Utils::Exceptions::InvalidCredentialsException, org::amalgam::Utils::Exceptions::UserExistenceException);

                    void logout()
                        raises (org::amalgam::Utils::Exceptions::NotLoggedInException);

                    void createAccount (in Player newPlayer)
                        raises (org::amalgam::Utils::Exceptions::AccountCreationFailedException);

                    void changeUsername(in string username, in string newUsername)
                        raises (org::amalgam::Utils::Exceptions::ChangeUsernameFailedException);

                    void changePassword(in string username, in string newPassword)
                        raises (org::amalgam::Utils::Exceptions::ChangePasswordFailedException);

                    void accountDeletionRequest(in string username)
                        raises (org::amalgam::Utils::Exceptions::DeleteAccountFailedException);

                    string getGameResult(in string playerName)
                        raises (org::amalgam::Utils::Exceptions::GameResultUnavailableException, org::amalgam::Utils::Exceptions::InGameException);

                    typedef sequence <Lobby> history;
                    history getGameHistory(in string playerName)
                        raises (org::amalgam::Utils::Exceptions::GameHistoryUnavailableException, org::amalgam::Utils::Exceptions::InGameException);
                };
            };
        };
    };
};
