#include "ProgramObjects.idl"

module org {
    module amalgam {
        module Service {
            module PlayerExceptions {
                exception AlreadyLoggedIn {
                    string message;
                };

                exception InvalidCredentials {
                    string message;
                };

                exception InvalidPlayerRequest {
                    string message;
                };

                exception InvalidWord {
                    string message;
                };

                exception NoPlayersAvailable {
                    string message;
                };

                exception NotLoggedIn {
                    string message;
                };

                exception ObjectExistence {
                    string message;
                };

                exception UserExistenceException {
                    string message;
                };

                exception ChangeUsernameFailed {
                    string reason;
                };

                exception ChangePasswordFailed {
                    string reason;
                };

                exception DeleteAccountFailed {
                    string reason;
                };

                exception SubmitWordFailed {
                    string reason;
                };

                exception StartGameFailed {
                    string reason;
                };

                exception GameHistoryUnavailable {
                    string reason;
                };

                exception GameResultUnavailable {
                    string reason;
                };

                exception InGameException {
                    string reason;
                };

                exception MatchCreationFailed {
                    string reason;
                };
            };

            module PlayerServiceModule {

                interface PlayerService {
                    typedef org::amalgam::Utils::Objects::Player Player;
                    typedef org::amalgam::Utils::Objects::GameRoom GameRoom;

                    void login(in PlayerCallback player_callback)
                        raises (PlayerExceptions::AlreadyLoggedIn, PlayerExceptions::InvalidCredentials, PlayerExceptions::UserExistenceException);

                    void logout()
                        raises (PlayerExceptions::NotLoggedIn);

                    void changeUsername(in string username, in string newUsername)
                        raises (PlayerExceptions::ChangeUsernameFailed);

                    void changePassword(in string username, in string newPassword)
                        raises (PlayerExceptions::ChangePasswordFailed);

                    void deleteAccount(in string username)
                        raises (PlayerExceptions::DeleteAccountFailed);

                    void submitWord(in string word, in string username)
                        raises (PlayerExceptions::SubmitWordFailed);

                    void startGame(in string username)
                        raises (PlayerExceptions::StartGameFailed, PlayerExceptions::InGameException);

                    GameRoom matchMake(in PlayerCallback player_callback)
                        raises (PlayerExceptions::MatchCreationFailed);

                    string getGameResult(in string playerName)
                        raises (PlayerExceptions::GameResultUnavailable, PlayerExceptions::InGameException);

                    void getGameHistory(in string playerName)
                        raises (PlayerExceptions::GameHistoryUnavailable, PlayerExceptions::InGameException);
                };

                interface ControllerInterface {
                    void setObjectsUser(in string objects)
                        raises (PlayerExceptions::InvalidPlayerRequest, PlayerExceptions::UserExistenceException);

                    void fetchAndUpdate()
                        raises (PlayerExceptions::InvalidPlayerRequest);
                };
            };
        };
    };
};
