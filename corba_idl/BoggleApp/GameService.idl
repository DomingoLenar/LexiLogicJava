#include "ProgramUtilities.idl"

module org {
    module amalgam {
        module Service {
            module GameServiceModule {
                interface GameService {

                    typedef org::amalgam::Utils::Objects::Leaderboard Leaderboard;
                    typedef org::amalgam::Utils::Objects::GameRoom GameRoom;
                    typedef org::amalgam::Utils::UIControllers::PlayerCallback PlayerCallback;

                    GameRoom matchMake(in PlayerCallback player_callback)
                        raises (org::amalgam::Utils::Exceptions::MatchCreationFailedException);

                    typedef char Matrix[6][6];
                    Matrix fetchWordBox(in long roomID)
                        raises (org::amalgam::Utils::Exceptions::WordFetchFailedException, org::amalgam::Utils::Exceptions::InvalidRoomIDException);

                    typedef sequence<Leaderboard> leaderboards;
                    leaderboards getLeaderboards()
                        raises (org::amalgam::Utils::Exceptions::EmptyLeaderBoardException);

                    void verifyWord(in string word)
                        raises (org::amalgam::Utils::Exceptions::InvalidWordFormatException, org::amalgam::Utils::Exceptions::DuplicateWordException);

                    // Keep but mark as deprecated in case
                    typedef sequence<string> words;
                    long validateTotalPoints(in words word)
                        raises (org::amalgam::Utils::Exceptions::InsufficientWordPointsException, org::amalgam::Utils::Exceptions::InvalidTotalPointsException);

                    string fetchWinner(in long lobbyId)
                        raises (org::amalgam::Utils::Exceptions::LobbyDoesNotExistException, org::amalgam::Utils::Exceptions::WinnerDoesNotExistException);

                };
            };
        };
    };
};
