package org.amalgam.Service.Game;


/**
* org/amalgam/Service/Game/GameServiceOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from GameService.idl
* Saturday, April 27, 2024 5:35:13 PM SGT
*/

public interface GameServiceOperations 
{
  org.amalgam.Service.Game.GameServicePackage.GameRoom matchMake (org.amalgam.Service.Game.PlayerCallback player_callback) throws org.amalgam.Service.GameExceptions.MatchCreationFailed;
  char[][] fetchWordBox (int roomID) throws org.amalgam.Service.GameExceptions.WordFetchException, org.amalgam.Service.GameExceptions.InvalidRoomID;
  org.amalgam.Service.Game.GameServicePackage.Leaderboard[] getLeaderboards () throws org.amalgam.Service.GameExceptions.EmptyLeaderBoard;
  void verifyWord (String word) throws org.amalgam.Service.GameExceptions.InvalidWordFormat, org.amalgam.Service.GameExceptions.DuplicateWordException;
  int validateTotalPoints (String[] word) throws org.amalgam.Service.GameExceptions.InsufficientWordPoints, org.amalgam.Service.GameExceptions.InvalidTotalPoints;
  String fetchWinner (int lobbyId) throws org.amalgam.Service.GameExceptions.InvalidLobbyID, org.amalgam.Service.GameExceptions.WinnerDoesNotExist;
  void insertLobby (org.amalgam.Service.Game.GameServicePackage.Lobby lobby) throws org.amalgam.Service.GameExceptions.InvalidLobbyData;
} // interface GameServiceOperations
