package org.amalgam.Utils.Objects;


/**
* org/amalgam/Utils/Objects/_GameRoomStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ProgramUtilities.idl
* Wednesday, May 8, 2024 12:45:43 AM SGT
*/

public class _GameRoomStub extends org.omg.CORBA.portable.ObjectImpl implements GameRoom
{

  public int roomID ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_roomID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return roomID (        );
            } finally {
                _releaseReply ($in);
            }
  } // roomID

  public void roomID (int newRoomID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_roomID", true);
                $out.write_long (newRoomID);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                roomID (newRoomID        );
            } finally {
                _releaseReply ($in);
            }
  } // roomID

  public String[] players ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_players", true);
                $in = _invoke ($out);
                String $result[] = org.amalgam.Utils.Objects.GameRoomPackage.PlayersListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return players (        );
            } finally {
                _releaseReply ($in);
            }
  } // players

  public void players (String[] newPlayers)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_set_players", true);
                org.amalgam.Utils.Objects.GameRoomPackage.PlayersListHelper.write ($out, newPlayers);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                players (newPlayers        );
            } finally {
                _releaseReply ($in);
            }
  } // players

  public void addPlayer (String playerName) throws org.amalgam.Utils.Exceptions.PlayerAlreadyInRoomException, org.amalgam.Utils.Exceptions.SQLError
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addPlayer", true);
                $out.write_string (playerName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/PlayerAlreadyInRoomException:1.0"))
                    throw org.amalgam.Utils.Exceptions.PlayerAlreadyInRoomExceptionHelper.read ($in);
                else if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/SQLError:1.0"))
                    throw org.amalgam.Utils.Exceptions.SQLErrorHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addPlayer (playerName        );
            } finally {
                _releaseReply ($in);
            }
  } // addPlayer

  public int getRoomID () throws org.amalgam.Utils.Exceptions.RoomDoesNotExistException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRoomID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/RoomDoesNotExistException:1.0"))
                    throw org.amalgam.Utils.Exceptions.RoomDoesNotExistExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRoomID (        );
            } finally {
                _releaseReply ($in);
            }
  } // getRoomID

  public String[] getPlayers () throws org.amalgam.Utils.Exceptions.PlayerListRetrievalException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPlayers", true);
                $in = _invoke ($out);
                String $result[] = org.amalgam.Utils.Objects.GameRoomPackage.listHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:org/amalgam/Utils/Exceptions/PlayerListRetrievalException:1.0"))
                    throw org.amalgam.Utils.Exceptions.PlayerListRetrievalExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPlayers (        );
            } finally {
                _releaseReply ($in);
            }
  } // getPlayers

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:org/amalgam/Utils/Objects/GameRoom:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "org.amalgam.Utils.Objects._GameRoomStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GameRoomStub
